<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>hugo on moonsn&#39;s profile</title>
    <link>https://moonsn.com/categories/hugo/</link>
    <description>Recent content in hugo on moonsn&#39;s profile</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Wed, 21 Oct 2015 19:54:25 +0800</lastBuildDate><atom:link href="https://moonsn.com/categories/hugo/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Hugo生成静态文件</title>
      <link>https://moonsn.com/post/deploymenthugo/</link>
      <pubDate>Wed, 21 Oct 2015 19:54:25 +0800</pubDate>
      
      <guid>https://moonsn.com/post/deploymenthugo/</guid>
      <description>$ sudo hugo server --watch --baseUrl=http://yoursite.org/ --appendPort=false </description>
    </item>
    
    <item>
      <title>为Hugo的文章页创建模板</title>
      <link>https://moonsn.com/post/hugo-single/</link>
      <pubDate>Tue, 20 Oct 2015 22:29:32 +0800</pubDate>
      
      <guid>https://moonsn.com/post/hugo-single/</guid>
      <description>single 是最主要的视图，Hugo会为每个Markdown文件提供一个single模板来渲染。
会用哪个模板来渲染呢？ Hugo 用一系列的规则来推测应该用哪个模板类渲染一个页面。
Hugo 选择模板的优先级如下表。如果一个文件不存在，那么下一个会被使用。这使得你可以为更多的页面设计模板。但多数情况下,列表最后的_default 文件就够啦。
用户可以在front-matter部分定义type 和layout指定用哪个模板渲染。Section是由md文件所在的位置来确定的。当然，如果你指定了type，那么还是以type为准。
Single  /layouts/TYPE-or-SECTION/LAYOUT.html /layouts/TYPE-or-SECTION/single.html /layouts/_default/single.html /themes/THEME/layouts/TYPE-or-SECTION/LAYOUT.html /themes/THEME/layouts/TYPE-or-SECTION/single.html /themes/THEME/layouts/_default/single.html  模板示例 md页面是&amp;rsquo;page&amp;rsquo;类型的，在他的模板中可以使用所有page variables和site variable。
下面我们将造着默认的模板，创建两个不同的类型的模板。
默认模板会在没有指定type是使用，他的工作原理和其他模板是一样的，但是他必须在&amp;quot;_default&amp;quot;目录下。
▾ layouts/ ▾ _default/ single.html ▾ post/ single.html ▾ project/ single.html post/single.html 这个模板是spf13.com在使用的模板。他用到了partial templates(也就是模板引用)
{{ partial &amp;#34;header.html&amp;#34; . }} {{ partial &amp;#34;subheader.html&amp;#34; . }} {{ $baseurl := .Site.BaseURL }} &amp;lt;section id=&amp;#34;main&amp;#34;&amp;gt; &amp;lt;h1 id=&amp;#34;title&amp;#34;&amp;gt;{{ .Title }}&amp;lt;/h1&amp;gt; &amp;lt;div&amp;gt; &amp;lt;article id=&amp;#34;content&amp;#34;&amp;gt; {{ .Content }} &amp;lt;/article&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/section&amp;gt; &amp;lt;aside id=&amp;#34;meta&amp;#34;&amp;gt; &amp;lt;div&amp;gt; &amp;lt;section&amp;gt; &amp;lt;h4 id=&amp;#34;date&amp;#34;&amp;gt; {{ .</description>
    </item>
    
  </channel>
</rss>
